@page "/login"
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IAuthService AuthService



@if (isAuthenticated)
{
	<h3>Welcome, @user.Email </h3>
}
else
{
 <h3>Please log in below</h3>

<EditForm Model="user" OnValidSubmit="HandleLogin">
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<div class="form-group">
		<label for="email">Email</label>
		<InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
	</div>
	<div class="form-group">
		<label for="password">Password</label>
		<InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
	</div>
	<button type="submit" class="btn btn-primary">Login</button>
	<ValidationSummary />
</EditForm>
	
}

@code {
	bool isAuthenticated = false;

	private UserLogin user = new UserLogin();

	private async void HandleLogin()
	{
		var result = await AuthService.Login(user);
		if (result.Success)
		{
			await LocalStorage.SetItemAsync<string>("authToken", result.Data);
			await AuthenticationStateProvider.GetAuthenticationStateAsync();
			NavigationManager.NavigateTo("/");
		}
		else
		{
			NavigationManager.NavigateTo("/login");
		}
	}
}
