@page "/register"
@inject NavigationManager NavigationManager
@inject IAuthService AuthService


<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<div class="form-group">
		<label for="email" class="required" >Email</label>
		<InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
		<ValidationMessage For="@(() => user.Email)"/>
	</div>
	<div class="form-group">
		<label for="username">Username</label>
		<InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
		<ValidationMessage For="@(() => user.Username)" />
	</div>
	<div class="form-group">
		<label for="password" class="required" >Password</label>
		<InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
		<ValidationMessage For="@(() => user.Password)" />
	</div>
	<div class="form-group">
		<label for="confirmPassword">Confirm Password</label>
		<InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
		<ValidationMessage For="@(() => user.ConfirmPassword)" />
	</div>
	<div class="form-check">
		<InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input"></InputCheckbox>
		<label for="confirmed" class="form-check-label">Confirmed</label>
		<ValidationMessage For="@(() => user.IsConfirmed)" />
	</div>
	<button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {

	private UserRegister user = new UserRegister();

	private async void HandleRegistration()
	{
		var result = await AuthService.Register(user);

		if (result.Success)
		{
			NavigationManager.NavigateTo("/");
		}
		else
		{
		}
	}
}
